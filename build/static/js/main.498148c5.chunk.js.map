{"version":3,"sources":["actions/index.js","reducers/index.js","util/services.js","contexts/LocationContext.js","middleware/index.js","components/FiveDayWeather.js","components/SearchLocation.js","App.js","reportWebVitals.js","index.js"],"names":["SET_LOCATION","SET_CONSOLIDATED_WEATHER","state","action","type","isLoaded","params","status","data","err","error","getAPI","path","a","console","log","axios","method","headers","url","catch","result","LocationContext","createContext","LocationContextProvider","props","useReducer","reducers","location","eDispatch","dispatch","then","res","middleware","Provider","value","children","FiveDayWeather","useContext","SearchLocation","useState","query","setQuery","useEffect","placehodler","onChange","e","target","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.498148c5.chunk.js","sourcesContent":["export const SET_LOCATION = {\r\n  REQ_LOCATION: \"REQ_LOCATION\",\r\n  REQ_LOCATION_SUCCESS: \"REQ_LOCATION_SUCCESS\",\r\n  REQ_LOCATION_FAIL: \"REQ_LOCATION_FAIL\",\r\n};\r\nexport const SET_CONSOLIDATED_WEATHER = {\r\n  REQ_CONSOLIDATED_WEATHER: \"REQ_CONSOLIDATED_WEATHER\",\r\n  REQ_CONSOLIDATED_WEATHER_SUCCESS: \"REQ_CONSOLIDATED_WEATHER_SUCCESS\",\r\n  REQ_CONSOLIDATED_WEATHER_FAIL: \"REQ_CONSOLIDATED_WEATHER_FAIL\",\r\n};\r\n","import {\r\n  SET_LOCATION,\r\n  SET_CONSOLIDATED_WEATHER,\r\n} from \"../actions\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_LOCATION.REQ_LOCATION:\r\n      return {\r\n        ...state,\r\n        isLoaded: false,\r\n        params: action.params,\r\n        status: \"pending\",\r\n      };\r\n    case SET_LOCATION.REQ_LOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoaded: false,\r\n        data: action.data,\r\n        status: \"done\",\r\n      };\r\n    case SET_LOCATION.REQ_LOCATION_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoaded: false,\r\n        err: action.err,\r\n        status: \"fail\",\r\n      };\r\n    case SET_CONSOLIDATED_WEATHER.REQ_CONSOLIDATED_WEATHER:\r\n      return {\r\n        ...state,\r\n        isLoaded: false,\r\n        params: action.params,\r\n        status: \"pending\",\r\n      };\r\n    case SET_CONSOLIDATED_WEATHER.REQ_CONSOLIDATED_WEATHER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoaded: false,\r\n        data: action.data,\r\n        status: \"done\",\r\n      };\r\n    case SET_CONSOLIDATED_WEATHER.REQ_CONSOLIDATED_WEATHER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoaded: false,\r\n        data: action.data,\r\n        status: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAPI = async (path) => {\r\n  console.log(`path: `, path);\r\n  const result = await axios({\r\n    method: \"get\",\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n    url: path,\r\n  }).catch((error) => console.log(error));\r\n  return result;\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport reducers from \"../reducers\";\r\nimport middleware from \"../middleware\";\r\n\r\nexport const LocationContext = createContext();\r\n\r\nconst LocationContextProvider = (props) => {\r\n  const [location, dispatch] = useReducer(reducers, {\r\n    isLoaded: null,\r\n    data: [],\r\n    params: \"\",\r\n    status: null,\r\n    err: \"\",\r\n  });\r\n\r\n  const eDispatch = middleware(dispatch);\r\n  console.log(`location: `, location);\r\n\r\n  return (\r\n    <LocationContext.Provider value={{ location, eDispatch }}>\r\n      {props.children}\r\n    </LocationContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LocationContextProvider;\r\n","import { SET_LOCATION, SET_CONSOLIDATED_WEATHER } from \"../actions\";\r\nimport { getAPI } from \"../util/services\";\r\n\r\nconst urlLocation = \"https://metaweather.com/api/location/search/?query=\";\r\nconst urlConsolidatedWeather = \"https://metaweather.com/api/location/\";\r\n\r\nexport default (dispatch) => (action) => {\r\n  switch (action.type) {\r\n    case SET_LOCATION.REQ_LOCATION:\r\n    return getAPI(`https://5fc9146d2af77700165ae2a4.mockapi.io/api/name`)\r\n      .then((res) =>\r\n        dispatch({\r\n          type: SET_LOCATION.REQ_LOCATION_SUCCESS,\r\n          data: res,\r\n        })\r\n      )\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: SET_LOCATION.REQ_LOCATION_FAIL,\r\n          err,\r\n        })\r\n      );\r\n    case SET_CONSOLIDATED_WEATHER.REQ_CONSOLIDATED_WEATHER:\r\n      return getAPI(`${urlConsolidatedWeather}${action.params}`)\r\n        .then((res) =>\r\n          dispatch({\r\n            type: SET_LOCATION.REQ_LOCATION_SUCCESS,\r\n            data: res,\r\n          })\r\n        )\r\n        .catch((err) =>\r\n          dispatch({\r\n            type: SET_LOCATION.REQ_LOCATION_FAIL,\r\n            err,\r\n          })\r\n        );\r\n    default:\r\n      dispatch(action);\r\n  }\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { LocationContext } from \"../contexts/LocationContext\";\r\n\r\nconst FiveDayWeather = () => {\r\n  const { location } = useContext(LocationContext);\r\n  return (\r\n    <>\r\n      <h1>List of weather</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FiveDayWeather;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { LocationContext } from \"../contexts/LocationContext\";\r\nimport { SET_LOCATION } from \"../actions\";\r\n\r\nconst SearchLocation = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const { eDispatch } = useContext(LocationContext);\r\n\r\n  useEffect(() => {\r\n    if(query !== \"\") {\r\n      eDispatch({type: SET_LOCATION.REQ_LOCATION, params: query})\r\n    }\r\n  }, [query])\r\n\r\n  return (\r\n    <>\r\n    <h1>Hello</h1>\r\n      <input\r\n        type=\"text\"\r\n        placehodler=\"typing your city\"\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        value={query}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchLocation;\r\n","import FiveDayWeather from './components/FiveDayWeather';\nimport SearchLocation from './components/SearchLocation';\nimport LocationContextProvider from \"./contexts/LocationContext\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LocationContextProvider>\n        <SearchLocation />\n        <FiveDayWeather />\n      </LocationContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}